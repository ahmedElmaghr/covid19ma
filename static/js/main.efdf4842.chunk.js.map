{"version":3,"sources":["coronamaroc/main/data/countries.tsv","component/CardComponent.js","coronamaroc/Components/coronamap/CoronaMapView.js","coronamaroc/main/container/CoronaMaContainer.js","container/Covid19Container.js","stackedarea/StackedArea.js","serviceWorker.js","index.js"],"names":["module","exports","CardComponent","getIconByLevel","level","class","aria-hidden","this","props","console","log","className","title","value","Component","CoronaMapView","width","height","viewBox","borderColor","drawMorocco","g","jsonData","morocco","objects","countries","geometries","filter","d","id","morrocanSahara","toBeMerged","append","datum","merge","attr","calculatePath","on","clickOnCountry","addZoom","svg","call","d3","zoomed","transform","selectAll","projection","geoMercator","center","scale","translate","precision","state","medias_francais","length","gGlobal","drawSvgWrapper","wrapper","Container","worldData","covid19","pieOpacity","panelOpacity","countries110","setState","feature","features","visible","Covid19Container","iconFontSize","buildPageByContext","context","buildPage1","buildPage2","buildPage3","isPage1","isPage2","isPage3","style","marginTop","border","backgroundColor","CoronaMaContainer","mapVisible","window","screen","to","fontSize","Boolean","location","hostname","match","hist","createBrowserHistory","ReactDOM","render","history","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.efdf4842.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/countries.46239ef0.tsv\";","import React, { Component } from 'react';\r\nimport './CardComponent.css'\r\nclass CardComponent extends Component {\r\n\r\n    render() {\r\n        const { level } = this.props;\r\n        console.log(\"level\", level)\r\n        return (\r\n            <div className={level}>\r\n                <h4 className={level + '-h3'}>{this.getIconByLevel(level)}  {this.props.title}</h4>\r\n                <p className={level + '-p'}>{this.props.value}</p>\r\n            </div>\r\n        );\r\n    }\r\n    getIconByLevel = (level) => {\r\n        switch (level) {\r\n            case 'danger':\r\n                return <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                break;\r\n            case 'info':\r\n                return <i class=\"fa fa-heart\" aria-hidden=\"true\"></i>\r\n                break;\r\n            case 'warning':\r\n                return <i class=\"fa fa-ambulance\" aria-hidden=\"true\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nexport default CardComponent;","import * as d3 from \"d3\";\r\nimport { Component } from \"react\";\r\nimport { merge } from \"topojson-client\";\r\nimport \"./CoronaMapViewCss.css\";\r\n\r\nexport default class CoronaMapView extends Component {\r\n  //Constantes\r\n\r\n  width = \"100%\";\r\n  height = \"100%\";\r\n  viewBox = `0 0 800 400`;\r\n  borderColor = \"blue\";\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      medias_francais: [],\r\n    };\r\n  }\r\n\r\n  \r\n\r\n  componentWillMount() {\r\n    console.log(\"componentWillMount\")\r\n    if (this.props.jsonData.length != 0) {\r\n      //Draw svg Wrapper\r\n      var svg = this.drawSvgWrapper();\r\n      var gGlobal = svg.append(\"g\").attr(\"id\", \"gWrapper\");\r\n      //Merge moroccan sahara and draw morroca\r\n      this.drawMorocco(gGlobal);\r\n      //\r\n      //add zoom\r\n      var wrapper = d3.select(\"#content\");\r\n      this.addZoom(wrapper);\r\n    }\r\n  }\r\n\r\n  drawMorocco = g => {\r\n    //merge Morocco\r\n    var jsonData = this.props.jsonData;\r\n    //Moroccan Sahara id = 732\r\n    //Morocco id = 504\r\n    var morocco = jsonData.objects.countries.geometries.filter(\r\n      d => d.id == 504\r\n    );\r\n    var morrocanSahara = jsonData.objects.countries.geometries.filter(\r\n      d => d.id == 732\r\n    );\r\n    var toBeMerged = [morocco[0], morrocanSahara[0]];\r\n    console.log(\"toBeMerged\", toBeMerged)\r\n    //\r\n    g.append(\"path\")\r\n      .datum(merge(jsonData, toBeMerged))\r\n      .attr(\"class\", \"morocco\")\r\n      .attr(\"d\", d => this.calculatePath(d))\r\n      .on(\"click\", (d) => {\r\n        console.log(\"Welcome to morocco <3\", d)\r\n        this.props.clickOnCountry()\r\n      })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      \"\"\r\n    );\r\n  }\r\n\r\n  //Draw svg wrapper for map\r\n  drawSvgWrapper() {\r\n    //Construct Body\r\n    var body = d3.select(\"#mapMorocco\")\r\n\r\n    //Construct SVG\r\n    var svg = body\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"svg\")\r\n      .attr(\"id\", \"content\")\r\n      // .attr(\"width\", this.width)\r\n      // .attr(\"height\", this.height)\r\n      .attr(\"viewBox\", this.viewBox)\r\n      ;\r\n    return svg;\r\n  }\r\n\r\n \r\n\r\n  //Add zoom\r\n  addZoom = svg => {\r\n    svg.call(d3.zoom().on(\"zoom\", () => {\r\n      this.zoomed(svg)\r\n    }));\r\n  };\r\n\r\n  zoomed = svg => {\r\n    var transform = d3.event.transform;\r\n\r\n    svg.selectAll(\"path\").attr(\"transform\", transform);\r\n\r\n  };\r\n\r\n\r\n  //Projection and path calculator\r\n  projection = () =>{\r\n    var geoMercator = d3.geoMercator()\r\n      .center([-15,26])\r\n      .scale(1200)\r\n      .translate([800 / 2, 550 / 2]);\r\n\r\n    var projection2 = d3\r\n      .geoOrthographic()\r\n      .scale(300)\r\n      .precision(0.1);\r\n    var projection3 = d3\r\n      .geoConicEqualArea()\r\n      .scale(150)\r\n      .center([0, 33])\r\n      //.translate([width / 2, height / 2])\r\n      .precision(0.3);\r\n    return geoMercator;\r\n  }\r\n\r\n  calculatePath = d => {\r\n    return d3.geoPath().projection(this.projection())(d);\r\n  };\r\n}\r\n","import * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport { feature } from \"topojson-client\";\r\nimport CoronaMapView from \"../../Components/coronamap/CoronaMapView\";\r\nimport DataHelper from \"../../Utils/DataHelper.js\";\r\nimport countries110 from \"./../../../../src/countries-110m.json\";\r\nimport countries from \"./../data/countries.tsv\";\r\nimport covid19 from \"./../data/covid19.json\";\r\n\r\nclass Container extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      worldData: [],\r\n      jsonData: [],\r\n      countries: [],\r\n      covid19: covid19,\r\n      pieOpacity: 0,\r\n      panelOpacity: 0,\r\n\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    let worldData = countries110;\r\n\r\n    this.setState({\r\n      worldData: feature(worldData, worldData.objects.countries).features,\r\n      jsonData: worldData\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    if (this.props && !this.props.visible) {\r\n      return \"\";\r\n    }\r\n    console.log(\"call Container render\")\r\n    const { jsonData, countries, panelOpacity } = this.state;\r\n    if (jsonData.length != 0) {\r\n      return (\r\n          <CoronaMapView\r\n            jsonData={jsonData}\r\n            clickOnCountry={(d) => { this.clickOnCountry(d) }}\r\n          />\r\n      );\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  clickOnCountry = d => {\r\n    console.log(\"d\", d);\r\n  }\r\n\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CardComponent from '../component/CardComponent';\r\nimport CoronaMaContainer from '../coronamaroc/main/container/CoronaMaContainer';\r\nimport StackedArea from '../stackedarea/StackedArea';\r\nimport './Covid19Container.css';\r\nclass Covid19Container extends Component {\r\n    iconFontSize = 100 + '%';\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapVisible: false,\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { context } = this.props;\r\n        console.log(\"context\", context)\r\n        console.log(\"kkkkk\", window.screen.height);\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"leftside\">\r\n                    <div className=\"group-btn\">\r\n                        <Link className=\"btn\" to=\"/page1\" ><i className=\"fa fa-map\" aria-hidden=\"false\" style={{ fontSize: this.iconFontSize }}></i></Link>\r\n                        <Link className=\"btn\" to=\"/page2\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style={{ fontSize: this.iconFontSize }}></i></Link>\r\n                        <Link className=\"btn\" to=\"/page3\"><i class=\"fa fa-university\" aria-hidden=\"true\" style={{ fontSize: this.iconFontSize }}></i></Link>\r\n                    </div>\r\n                </div>\r\n                <div id=\"dashboard\" className=\"rightside\" style={{ height: (window.screen.height - 100) + 'px' }}>\r\n                    {this.buildPageByContext(context)}\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n    /**Use the strategy pattern */\r\n    buildPageByContext = (context) => {\r\n        switch (context) {\r\n            case \"page1\":\r\n                return this.buildPage1();\r\n            case \"page2\":\r\n                return this.buildPage2();\r\n            case \"page3\":\r\n                return this.buildPage3();\r\n        }\r\n    }\r\n\r\n    isPage1 = (context) => {\r\n\r\n        if (context == \"page1\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isPage2 = (context) => {\r\n\r\n        if (context == \"page2\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isPage3 = (context) => {\r\n\r\n        if (context == \"page3\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    buildPage1 = () => {\r\n        return (\r\n            <div className=\"container\" style={{ marginTop: 2 + 'vh' }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <CardComponent level=\"danger\" title=\"عدد الوفيات\" value={3}></CardComponent>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <CardComponent level=\"info\" title=\"الحالات المستبعدة\" value={265} ></CardComponent>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <CardComponent level=\"warning\" title=\"عدد الإصابات\" value={74}></CardComponent>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={{ marginTop: 2 + 'vh' }}>\r\n                    <div className=\"col\" >\r\n                        <h2>Dashboard 2 </h2>\r\n                        <svg id=\"myDV\" viewBox=\"0 0 800 400\" style={{ border: 'solid 2px white', backgroundColor: 'darkgrey' }}></svg>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <h2>Dashboard 1</h2>\r\n                        <div id=\"mapMorocco\">\r\n                            <CoronaMaContainer visible={true}></CoronaMaContainer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={{ marginTop: 2 + 'vh' }}>\r\n                    <div className=\"col\">\r\n                        <svg id=\"myDV11\" viewBox=\"0 0 800 400\" style={{ border: 'solid 2px white', backgroundColor: 'darkgrey' }}></svg>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <svg id=\"myDV22\" viewBox=\"0 0 800 400\" style={{ border: 'solid 2px white', backgroundColor: 'darkgrey' }}></svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    buildPage2 = () => {\r\n        return (\r\n            <div className=\"container\" style={{ marginTop: 2 + 'vh' }}>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    buildPage3 = () => {\r\n        return (\r\n            <div className=\"container\" style={{ marginTop: 2 + 'vh' }}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Covid19Container;","import React, { Component } from 'react';\r\nimport * as d3 from 'd3'\r\nclass StackedArea extends Component {\r\n\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"myDV\">\r\n\r\n            </div>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default StackedArea;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Covid19Container from './container/Covid19Container';\n\nconst hist = createBrowserHistory();\nReactDOM.render(\n    <Router history={hist}>\n        <Switch>\n\n            <Route exact path=\"/\" component={() => {\n                return <Covid19Container></Covid19Container>\n            }} />\n            <Route exact path=\"/page1\" component={() => {\n                return <Covid19Container context={\"page1\"}></Covid19Container>\n            }} />\n            <Route exact path=\"/page2\" component={() => {\n                return <Covid19Container context={\"page2\"}></Covid19Container>\n            }} />\n            <Route exact path=\"/page3\" component={() => {\n                return <Covid19Container context={\"page3\"}></Covid19Container>\n            }} />\n            <Route path=\"/test\" component={() => {\n                return <div>This is a test page</div>\n            }} />\n        </Switch>\n    </Router>\n    , document.getElementById('root')\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}